/*
题目：abijkabcd 则结果返回 abcd 长度为4。注意是一个字符串，连续的“字符串”而不是 数字串
*/

/*
思路：
1、因为ASCII码的关系，如果字符之间是相邻的话，那么比如 b - a 一定是1了，我们就借助这点来判断是否为连续字符
2、相邻字符，ASCII码从小到大排列，所以a - b 一定是-1
3、设置一个临时最大值，每轮结束，就存一次最大值
4、字符中断后，更新临时最大值
5、连续不相邻，马上再new一个StringBuilder，就是清空的意思，这里有点偷懒了
6、因为俩俩对比，所以10个字符，遍历到第9个字符就行了
思路来自于CSDN
*/

```
public class Solution {
    public static void main(String[] args) {
        String testStr = "abijkabcdefg";
        int tempVal = solution(testStr);
        System.out.print(tempVal);
    }
 
    private static int solution(String str) {
        int max = 0;
        int tempMax = 1;
        StringBuilder tempBuilder = new StringBuilder();
        for (int i = 0; i < str.length() - 1; i++) {
            char firstChar = str.charAt(i);
            char secondChar = str.charAt(i + 1);
            if (firstChar - secondChar == -1) {
                tempMax++;
                tempBuilder.append(firstChar);
                if (secondChar == str.charAt(str.length() - 1)) {
                    tempBuilder.append(secondChar);
                }
            } else {
                tempMax = 1;
                tempBuilder = new StringBuilder();
            }
            max = max > tempMax ? max : tempMax;
        }
        System.out.println(tempBuilder.toString());
        return max;
    }
```
